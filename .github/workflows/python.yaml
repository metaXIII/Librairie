name: Python application
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      #docker
      - name: start docker container
        run: docker-compose up -d
      #python 3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: python -m pip install --upgrade pip ; pip install pymongo; if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: 1. Les fondamentaux/1. Les différents types de données python
        working-directory: ./Code Academy 2017/1. Les fondamentaux/1. Les différents types de données python
        run: python course.py
      - name: 1. Les fondamentaux/2. Encore plus de types de données Python
        working-directory: ./Code Academy 2017/1. Les fondamentaux/2. Encore plus de types de données Python
        run: python course.py
      - name: 1. Les fondamentaux/3. Fiabilité par abstraction
        working-directory: ./Code Academy 2017/1. Les fondamentaux/3. Fiabilité par abstraction
        run: python course.py
      - name: 1. Les fondamentaux/4. Créer rapidement des fichiers et des modules
        working-directory: ./Code Academy 2017/1. Les fondamentaux/4. Créer rapidement des fichiers et des modules
        run: python course.py
      - name: 1. Les fondamentaux/5. Utiliser un IDE pour sauver votre santé mentale
        working-directory: ./Code Academy 2017/1. Les fondamentaux/5. Utiliser un IDE pour sauver votre santé mentale
        run: python course.py
      - name: 1. Les fondamentaux/6. Ecrire son propre programme UNIX
        working-directory: ./Code Academy 2017/1. Les fondamentaux/6. Ecrire son propre programme UNIX
        run: python cat.py hello.txt
      - name: 1. Les fondamentaux/7. Un code plus soigné avec les modules
        working-directory: ./Code Academy 2017/1. Les fondamentaux/7. Un code plus soigné avec les modules
        run: python domath.py
      - name: 1. Les fondamentaux/8. Comprendre le stockage et la persistance
        working-directory: ./Code Academy 2017/1. Les fondamentaux/8. Comprendre le stockage et la persistance
        run: python filesave.py
      - name: 1. Les fondamentaux/9. L'organisation des données et les requêtes
        working-directory: ./Code Academy 2017/1. Les fondamentaux/9. L'organisation des données et les requêtes
        run: python chiffrement.py aze "Text to be crypted" && python dechiffrement.py aze 010101000110010101111000011101000010000001110100011011110010000001100010011001010010000001100011011100100111100101110000000101010001111100000001
      - name: 2. Bases de données/1. Python et SQLite3
        working-directory: ./Code Academy 2017/2. Bases de données/1. Python et SQLite3
        run: python connect.py && python alter.py && python insert.py && python fetch.py && python delete.py && python update.py && python tablesNames.py LXF.sqlite issues
      - name: 2. Bases de données/3. MongoDB Utiliser les drivers natifs
        working-directory: ./Code Academy 2017/2. Bases de données/3. MongoDB Utiliser les drivers natifs
        run: python connect.py
      # rust
      - name: rust hello
        shell: bash
        run: rustc "Code Academy 2017/3. Allez plus loin/1. Rust modules et cargo/hello.rs" && ./hello && rm hello
      - name: rust fibonnaci
        shell: bash
        run: rustc "Code Academy 2017/3. Allez plus loin/1. Rust modules et cargo/fibonnaci.rs" && ./fibonnaci && rm fibonnaci
      - name: rust lesson
        shell: bash
        run: rustc "Code Academy 2017/3. Allez plus loin/1. Rust modules et cargo/lesson.rs" && ./lesson && rm lesson
      - name: rust function
        shell: bash
        run: rustc "Code Academy 2017/3. Allez plus loin/2. Rust fonctions et modules/function.rs" && ./function && rm function
      - name: rust tuples
        shell: bash
        run: rustc "Code Academy 2017/3. Allez plus loin/2. Rust fonctions et modules/tuples.rs" && ./tuples && rm tuples
    # python 2 is not available anymore
    #docker stop container
      - name: stop container
        if: always()
        run: docker compose down
